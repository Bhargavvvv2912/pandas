name: Autonomous Dependency Updater

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */3 * *'

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout Experiment Repository
        uses: actions/checkout@v4

      # --- ADD THIS NEW PREPARATION STEP ---
      - name: Prepare Unconstrained Requirements File
        run: |
          # The path to the original messy file
          ORIGINAL_REQS="requirements-dev.txt"
          
          # The path where the agent expects to find the file
          AGENT_REQS="requirements-dev.txt"

          # Use a simple regex to remove all version constraints and save the cleaned file
          # This keeps only the package names.
          grep -oE '^[a-zA-Z0-9\-_]+' $ORIGINAL_REQS > $AGENT_REQS
          
          echo "Cleaned requirements file for agent:"
          cat $AGENT_REQS
      # --- END OF NEW STEP ---

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install agent dependencies
        run: pip install google-generativeai pypi-simple packaging

      - name: Update Google AI Library
        run: pip install --upgrade google-generativeai

      - name: Run the Autonomous Agent
        # The agent will run its own internal validation loop
        run: python dependency_agent.py
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      
      - name: Commit and push changes if any
        run: |
          git config --global user.name 'AURA Dependency Agent'
          git config --global user.email 'aura-agent@users.noreply.github.com'
          
          TARGET_FILE="pandas/requirements-dev.txt"
          
          if git diff --quiet $TARGET_FILE; then
            echo "No dependency changes to commit."
            exit 0
          fi
          
          echo "Dependencies updated for Pandas. Committing changes."
          
          COMMIT_BODY="Automated dependency updates for the Pandas project."
          if [ -f metrics_output.txt ]; then
            COMMIT_BODY=$(cat metrics_output.txt)
          fi
          
          git add $TARGET_FILE
          
          git commit -m "chore(deps): Autonomously update pandas dependencies [skip ci]" -m "$COMMIT_BODY"
          
          rm -f metrics_output.txt

          git push

  validate-on-other-versions:
    # This job is the final health check, just like in your original workflow.
    # It runs only after the main job has finished and potentially pushed a commit.
    needs: update-dependencies
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    strategy:
      # It runs the same validation across multiple Python versions.
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone Pandas Repository
        run: git clone https://github.com/pandas-dev/pandas.git

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install updated dependencies
        # It installs the final, committed requirements file from the previous job.
        run: pip install -r pandas/requirements-dev.txt

      - name: Run validation on Python ${{ matrix.python-version }}
        # It runs the new validation script for Pandas.
        run: python validation.py
